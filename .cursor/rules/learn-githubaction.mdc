---
description: 
globs: .github/**/*
alwaysApply: false
---
# GitHub Actions: Rust 빌드 시 예기치 않은 `rustflags` 문제

## 문제 상황

GitHub Actions에서 Rust 프로젝트를 빌드할 때 (`actions-rust-lang/setup-rust-toolchain` 사용) 컴파일 오류(예: 특정 트레이트 불일치)가 발생할 수 있습니다.

이는 `setup-rust-toolchain` 액션이 `rustflags`를 명시적으로 설정하지 않았을 때, 예상치 못한 플래그를 상속받아 적용할 수 있기 때문입니다. 
이로 인해 로컬 환경이나 다른 빌드 환경과 다른 feature flag가 활성화/비활성화되어 빌드 동작이 달라질 수 있습니다.

## 해결 방법

`actions-rust-lang/setup-rust-toolchain` 액션의 `with` 블록에 `rustflags: ""`를 명시적으로 추가하여 이 문제를 해결할 수 있습니다. 이렇게 하면 의도하지 않은 플래그가 빌드 프로세스에 영향을 미치는 것을 방지하고 일관된 빌드 환경을 보장할 수 있습니다.

```yaml
# .github/workflows/your_workflow.yaml 예시
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain (Windows MSVC)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable # 또는 특정 버전
          target: x86_64-pc-windows-msvc
          rustflags: "" # <- 명시적으로 빈 문자열 설정
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc
```

이 설정을 통해 빌드 환경에서 `rustflags`가 예기치 않게 설정되는 문제를 방지하고 안정적인 빌드를 수행할 수 있습니다. 